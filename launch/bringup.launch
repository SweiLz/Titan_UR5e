<?xml version="1.0"?>
<launch>
    <arg name="sim" default="true"/>

    <arg if="$(arg sim)" name="robot_ip" value="127.0.0.1"/>
    <arg if="$(arg sim)" name="kinematics_config" value="$(find titan_ur5e)/config/ur5e_kinematic_default.yaml"/>

    <arg unless="$(arg sim)" name="robot_ip" value="10.42.0.79"/>
    <arg unless="$(arg sim)" name="kinematics_config" value="$(find titan_ur5e)/config/ur5e_kenematic_config.yaml"/>


    <!-- <node pkg="tf" type="static_transform_publisher" name="fixed_world_ur1" args="0.0 0.0 0.0 0.0 0.0 0.0 world ur1/world 20" /> -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="fixed_world_ur2" args="0.0 0.0 0.0 0.0 0.0 0.0 world ur2/world 20" /> -->

    <!-- <group ns="ur1"> -->
    <param name="robot_description" command="xacro '$(find titan_ur5e)/urdf/ur5e_robot.urdf.xacro' kinematics_config:=$(arg kinematics_config) fixed_xyz:='0.0 1.0 0.0' fixed_rpy:='0.0 0.0 3.14159'" />

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
        <!-- <param name="tf_prefix" value="ur1"/> -->
    </node>

    <rosparam file="$(find ur_robot_driver)/config/ur5e_controllers.yaml" command="load"/>
    <node name="ur_hardware_interface" pkg="ur_robot_driver" type="ur_robot_driver_node" output="screen" required="true">
        <param name="robot_ip" type="str" value="$(arg robot_ip)"/>
        <rosparam command="load" file="$(arg kinematics_config)" />
        <param name="script_file" value="$(find ur_robot_driver)/resources/ros_control.urscript"/>
        <param name="output_recipe_file" value="$(find ur_robot_driver)/resources/rtde_output_recipe.txt"/>
        <param name="input_recipe_file" value="$(find ur_robot_driver)/resources/rtde_input_recipe.txt"/>
        <param name="headless_mode" value="false"/>
        <!-- <param name="tf_prefix" value="ur1/"/> -->
        <param name="tool_voltage" value="0"/>
        <param name="tool_parity" value="0"/>
        <param name="tool_baud_rate" value="115200"/>
        <param name="tool_stop_bits" value="1"/>
        <param name="tool_rx_idle_chars" value="1.5"/>
        <param name="tool_tx_idle_chars" value="3.5"/>
    </node>

    <!-- <node if="$(arg use_tool_communication)" name="ur_tool_communication_bridge" pkg="ur_robot_driver" type="tool_communication" respawn="false" output="screen">
            <param name="robot_ip" value="$(arg robot_ip)"/>
            <param name="reverse_port" type="int" value="50001"/>
            <param name="script_sender_port" type="int" value="50002"/>
            <param name="device_name" value="/tmp/ttyUR"/>
            <param name="tcp_port" value="54321"/>
        </node> -->

    <node name="ros_control_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller scaled_pos_traj_controller speed_scaling_state_controller force_torque_sensor_controller"/>
    <node name="ros_control_stopped_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="--stopped pos_traj_controller joint_group_vel_controller"/>
    <node name="controller_stopper" pkg="controller_stopper" type="node" respawn="false" output="screen">
        <remap from="robot_running" to="ur_hardware_interface/robot_program_running"/>
        <rosparam param="consistent_controllers">
                - "joint_state_controller"
                - "speed_scaling_state_controller"
                - "force_torque_sensor_controller"
                - "robot_status_controller"
        </rosparam>
    </node>

    <node ns="ur_hardware_interface" name="ur_robot_state_helper" pkg="ur_robot_driver" type="robot_state_helper" respawn="false" output="screen"/>

    <include file="$(find titan_ur5e)/launch/move_group.launch"/>
    <!-- </group> -->
    <!-- <group ns="ur2">
        <param name="robot_description" command="xacro '$(find titan_ur5e)/urdf/ur5e_robot.urdf.xacro' kinematics_config:=$(arg kinematics_config) fixed_xyz:='0.0 -1.0 0.0' fixed_rpy:='0.0 0.0 3.14159'" />

        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
            <param name="tf_prefix" value="ur2"/>
        </node>

        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
        <include file="$(find titan_ur5e)/launch/move_group.launch"/>
    </group> -->

</launch>